# Load/Install the necessary packages
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(tidyverse, magrittr, Lahman)
# Load/Install the necessary packages
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(tidyverse, magrittr, Lahman)
# Fielding data frame
# contains positional data
fielding = Lahman::Fielding
View(fielding)
hitters = fielding %>%
group_by(playerID)
View(hitters)
View(fielding)
# STEP 1: Subset out pitchers from the data frame
hitters = subset(fielding, POS != "P")
hitters = select(hitters, playerID)
hitters = hitters %>%
group_by()
hitters = hitters %>%
group_by(playerID) %>%
slice()
View(hitters)
hitters = unique(hitters)
View(hitters)
# Hall of Fame data frame
# contains target variable
hof = Lahman::HallOfFame
# Batting data frame
# contains predictors
batting = Lahman::Batting
# Hall of Fame data frame
# contains target variable
hof = Lahman::HallOfFame
# Batting data frame
# contains predictors
batting = Lahman::Batting
# Fielding data frame
# contains positional data
fielding = Lahman::Fielding
# STEP 1: Subset out pitchers from the data frame
prep = subset(fielding, POS != "P")
prep = select(prep, playerID)
prep = unique(prep)
View(batting)
merged = merge(prep, batting, c("playerID", "playerID"))
View(merged)
rm(batting, fielding, prep)
# STEP 2: Aggregate batting stats to the player level
merged_agg = merged %>%
group_by(playerID) %>%
summarise(playerID = playerID,
LOS = unique(yearID),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
plot_missing(merged)
pacman::p_load(tidyverse, magrittr, DataExplorer, Lahman)
plot_missing(merged)
hist(merged$IBB)
hist(merged$SF)
hist(merged$GIDP)
hist(merged$CS)
hist(merged$SH)
hist(merged$HBP)
hist(merged$SB)
hist(merged$SO)
hist(merged$RBI)
# STEP 1.5: Impute missing values
# IBB (median)
merged$IBB[is.na(merged$IBB)] = median(merged$IBB, na.rm = TRUE)
summary(merged$IBB)
summary(merged$SF)
# SF (median)
merged$SF[is.na(merged$SF)] = median(merged$SF, na.rm = TRUE)
summary(merged$SF)
# GIDP (median)
merged$GIDP[is.na(merged$GIDP)] = median(merged$GIDP, na.rm = TRUE)
summary(merged$GIDP)
# CS (median)
merged$CS[is.na(merged$CS)] = median(merged$CS, na.rm = TRUE)
summary(merged$CS)
# SH (median)
merged$SH[is.na(merged$SH)] = median(merged$SH, na.rm = TRUE)
summary(merged$SH)
# HBP (median)
merged$HBP[is.na(merged$HBP)] = median(merged$HBP, na.rm = TRUE)
summary(merged$HBP)
# SB (median)
merged$SB[is.na(merged$SB)] = median(merged$SB, na.rm = TRUE)
summary(merged$SB)
# SO (median)
merged$SO[is.na(merged$SO)] = median(merged$SO, na.rm = TRUE)
summary(merged$SO)
summary(merged$RBI)
# RBI (median)
merged$RBI[is.na(merged$RBI)] = median(merged$RBI, na.rm = TRUE)
summary(merged$RBI)
# STEP 2: Aggregate batting stats to the player level
merged_agg = merged %>%
group_by(playerID) %>%
summarise(playerID = playerID,
LOS = unique(yearID),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
plot_missing(merged)
# STEP 2: Aggregate batting stats to the player level
merged_agg = merged %>%
group_by(playerID) %>%
dplyr::summarise(playerID = playerID,
LOS = unique(yearID),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
# STEP 2: Aggregate batting stats to the player level
merged_agg = merged %>%
group_by(playerID) %>%
summarise(playerID = playerID,
LOS = unique(yearID),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF)#,
#GIDP = sum(GIDP)
)
View(merged)
# STEP 2: Aggregate batting stats to the player level
test = subset(merged, playerID == "pujolal01")
View(test)
merged_agg = test %>%
group_by(playerID) %>%
summarise(playerID = playerID,
LOS = unique(yearID),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
View(test)
View(merged_agg)
merged_agg = test %>%
group_by(playerID) %>%
summarise(playerID = unique(playerID),
LOS = unique(yearID),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
merged_agg = test %>%
group_by(playerID) %>%
summarise(LOS = unique(yearID),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
View(merged_agg)
merged_agg = test %>%
group_by(playerID) %>%
summarise(LOS = n(unique(yearID)),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
merged_agg = test %>%
group_by(playerID) %>%
summarise(LOS = n(),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
View(merged_agg)
merged_agg = merged %>%
group_by(playerID) %>%
summarise(LOS = n(),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
View(merged_agg)
rm(test)
hist(merged$yearID)
# Load/Install the necessary packages
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(tidyverse, magrittr, DataExplorer, Lahman)
# Hall of Fame data frame
# contains target variable
hof = Lahman::HallOfFame
yes = subset(hof, inducted == "Y")
# Batting data frame
# contains predictors
batting = Lahman::Batting
# Fielding data frame
# contains positional data
fielding = Lahman::Fielding
p = subset(fielding, fielding$POS == "P")
# STEP 1: Subset out pitchers from the data frame
prep = subset(fielding, POS != "P")
prep = select(prep, playerID)
prep = unique(prep)
merged = merge(prep, batting, c("playerID", "playerID"))
rm(batting, fielding, prep)
# STEP 1.5: Impute missing values
# IBB (median)
merged$IBB[is.na(merged$IBB)] = median(merged$IBB, na.rm = TRUE)
summary(merged$IBB)
# SF (median)
merged$SF[is.na(merged$SF)] = median(merged$SF, na.rm = TRUE)
summary(merged$SF)
# GIDP (median)
merged$GIDP[is.na(merged$GIDP)] = median(merged$GIDP, na.rm = TRUE)
summary(merged$GIDP)
# CS (median)
merged$CS[is.na(merged$CS)] = median(merged$CS, na.rm = TRUE)
summary(merged$CS)
# SH (median)
merged$SH[is.na(merged$SH)] = median(merged$SH, na.rm = TRUE)
summary(merged$SH)
# HBP (median)
merged$HBP[is.na(merged$HBP)] = median(merged$HBP, na.rm = TRUE)
summary(merged$HBP)
# SB (median)
merged$SB[is.na(merged$SB)] = median(merged$SB, na.rm = TRUE)
summary(merged$SB)
# SO (median)
merged$SO[is.na(merged$SO)] = median(merged$SO, na.rm = TRUE)
summary(merged$SO)
# RBI (median)
merged$RBI[is.na(merged$RBI)] = median(merged$RBI, na.rm = TRUE)
summary(merged$RBI)
# STEP 2: Aggregate batting stats to the player level
merged_agg = merged %>%
group_by(playerID) %>%
summarise(LOS = n(),
G = sum(G),
AB = sum(AB),
R = sum(R),
H = sum(H),
X2B = sum(X2B),
X3B = sum(X3B),
HR = sum(HR),
RBI = sum(RBI),
SB = sum(SB),
CS = sum(CS),
SO = sum(SO),
BB = sum(BB),
IBB = sum(IBB),
HBP = sum(HBP),
SH = sum(SH),
SF = sum(SF),
GIDP = sum(GIDP))
View(merged_agg)
View(merged)
View(hof)
View(hof)
